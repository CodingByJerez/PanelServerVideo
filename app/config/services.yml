# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false




    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']


    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    CronBundle\:
        resource: '../../src/CronBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/CronBundle/{Entity,Repository,Tests}'





    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    AppBundle\Service\Themoviedb\FilmService:
        public: true
        arguments:
            $requestStack: "@request_stack"
            $themoviedb_key: "%themoviedb_key%"


    AppBundle\Service\Themoviedb\SerieService:
        public: true
        arguments:
            $requestStack: "@request_stack"
            $themoviedb_key: "%themoviedb_key%"




    app.locale.listener:
        class: AppBundle\EventListener\LocaleListener
        arguments: ["%locale_default%", "%kernel.root_dir%"]
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            #- { name: kernel.event_subscriber, event: kernel.request, method: onKernelRequest }
        #arguments:
         #   $defaultLanguage: "%locale_default%"


    CronBundle\Service\UnFichier\DownloadService:
        public: true
        arguments:
            $tmp_dir: "%tmp_dir%"
            $root_dir: "%kernel.root_dir%"
            $key_api: "%unfichier_key%"



        #arguments:
         #   $defaultLanguage: "%locale_default%"